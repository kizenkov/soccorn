{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Messages.jsx","store/dialogsSelectors.js","components/Dialogs/Dialogs.jsx"],"names":["module","exports","Dialog","dialogsPage","setActiveNameDialogs","theme","useContext","ThemeContext","className","classes","dialog","style","backgroundColor","backgroundContent","Object","keys","dialogs","map","name","activeNameDialogs","activeName","onClick","showMessages","Messages","sendMessage","useState","message","setMessage","messages","choosingDialog","whoWrite","messageFromMe","dialogMessage","id","sendArea","createSendArea","e","currentTarget","value","backgroundButton","getDialogsPage","state","compose","withAuthRedirect","connect","props"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,SAAW,4B,4FCmBnSC,EAhBA,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,qBACpBC,EAAQC,qBAAWC,KAIzB,OAAO,qBAAKC,UAAWC,IAAQC,OAAQC,MAAO,CAC1CC,gBAAiBP,EAAMQ,mBADpB,SAGFC,OAAOC,KAAKZ,EAAYa,SAASC,KAAI,SAAAC,GAAI,OACtC,qBACKV,UAAWL,EAAYgB,oBAAsBD,EAAOT,IAAQW,WAAa,KAD9E,SAEI,mBAAGC,QAAS,kBATL,SAACH,GAChBd,EAAqBc,GAQKI,CAAaJ,IAA/B,SAAsC,4BAAIA,OAFpCA,S,iCC0BPK,EAlCE,SAAC,GAAgC,IAA/BpB,EAA8B,EAA9BA,YAAaqB,EAAiB,EAAjBA,YACtBnB,EAAQC,qBAAWC,KACzB,EAA8BkB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAAO,sBAAKnB,UAAWC,IAAQmB,SAAxB,UAEH,sBAAKpB,UAAWC,IAAQiB,QAASf,MAAO,CACpCC,gBAAiBP,EAAMQ,mBAD3B,WAGMV,EAAYgB,mBAAqB,qBAAKX,UAAWC,IAAQoB,eAAxB,8CAClC1B,EAAYgB,kBACT,8BACKhB,EAAYa,QAAQb,EAAYgB,mBAAmBF,KAAI,SAAAS,GACpD,OAAO,qBACKlB,UAAiC,OAArBkB,EAAQI,SAAqBrB,IAAQsB,cAAgB,KADtE,SAEFL,EAAQM,eAFIN,EAAQO,SAKxB,QAEjB,qBAAKzB,UAAWC,IAAQyB,SAAUvB,MAAO,CACrCC,gBAAiBP,EAAMQ,mBAD3B,SAGKsB,aA1Ba,SAACC,GACnBT,EAAWS,EAAEC,cAAcC,SAyBQZ,GAvBf,WACpBF,EAAYE,EAASvB,EAAYgB,mBACjCQ,EAAW,MAqBkDtB,EAAMkC,wB,SClC9DC,EAAiB,SAACC,GAC3B,OAAOA,EAAMtC,aC0BFuC,sBACXC,IACAC,aARkB,SAACH,GACnB,MAAO,CACHtC,YAAaqC,EAAeC,MAMP,CAACrC,yBAAsBoB,kBAFrCkB,EAjBC,SAACG,GACb,OAAO,sBAAKrC,UAAWC,IAAQO,QAAxB,UACH,cAAC,EAAD,CAAQb,YAAa0C,EAAM1C,YACnBC,qBAAsByC,EAAMzC,uBAEpC,cAAC,EAAD,CAAUD,YAAa0C,EAAM1C,YACnBqB,YAAaqB,EAAMrB","file":"static/js/3.c2ed9048.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2y0N3\",\"dialog\":\"Dialogs_dialog__12yjL\",\"activeName\":\"Dialogs_activeName__3ba-R\",\"messages\":\"Dialogs_messages__gLdmD\",\"message\":\"Dialogs_message__F35Tr\",\"choosingDialog\":\"Dialogs_choosingDialog__3_iSt\",\"messageFromMe\":\"Dialogs_messageFromMe__11BsT\",\"sendArea\":\"Dialogs_sendArea__3yi6b\"};","import React, {useContext} from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {ThemeContext} from '../../../store/appReducer';\r\n\r\nconst Dialog = ({dialogsPage, setActiveNameDialogs}) => {\r\n    const theme = useContext(ThemeContext);\r\n    let showMessages = (name) => {\r\n        setActiveNameDialogs(name)\r\n    }\r\n    return <div className={classes.dialog} style={{\r\n        backgroundColor: theme.backgroundContent,\r\n    }}>\r\n        {Object.keys(dialogsPage.dialogs).map(name => (\r\n            <div key={name}\r\n                 className={dialogsPage.activeNameDialogs === name ? classes.activeName : null}>\r\n                <p onClick={() => showMessages(name)}><b>{name}</b></p>\r\n            </div>))}\r\n    </div>\r\n}\r\n\r\nexport default Dialog;","import React, {useContext, useState} from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {createSendArea} from '../../../common/helpers';\r\nimport {ThemeContext} from '../../../store/appReducer';\r\n\r\nconst Messages = ({dialogsPage, sendMessage}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const [message, setMessage] = useState('');\r\n    const changeMessage = (e) => {\r\n        setMessage(e.currentTarget.value)\r\n    }\r\n    const sendMessageText = () => {\r\n        sendMessage(message, dialogsPage.activeNameDialogs);\r\n        setMessage('')\r\n    }\r\n    return <div className={classes.messages}>\r\n\r\n        <div className={classes.message} style={{\r\n            backgroundColor: theme.backgroundContent\r\n        }}>\r\n            {!dialogsPage.activeNameDialogs && <div className={classes.choosingDialog}>⇦⇦⇦ Choose dialog</div>}\r\n            {dialogsPage.activeNameDialogs ?\r\n                <div>\r\n                    {dialogsPage.dialogs[dialogsPage.activeNameDialogs].map(message => {\r\n                        return <div key={message.id}\r\n                                    className={(message.whoWrite === 'me') ? classes.messageFromMe : null}>\r\n                            {message.dialogMessage}\r\n                        </div>\r\n                    })}\r\n                </div> : null}\r\n        </div>\r\n        <div className={classes.sendArea} style={{\r\n            backgroundColor: theme.backgroundContent\r\n        }}>\r\n            {createSendArea(changeMessage, message, sendMessageText, theme.backgroundButton)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Messages;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage\r\n}","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Dialog from './Dialog/Dialog';\r\nimport withAuthRedirect from '../../hocs/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport Messages from './Messages/Messages';\r\nimport {sendMessage, setActiveNameDialogs} from '../../store/dialogsReducer';\r\nimport {getDialogsPage} from '../../store/dialogsSelectors';\r\n\r\nconst Dialogs = (props) => {\r\n    return <div className={classes.dialogs}>\r\n        <Dialog dialogsPage={props.dialogsPage}\r\n                setActiveNameDialogs={props.setActiveNameDialogs}\r\n        />\r\n        <Messages dialogsPage={props.dialogsPage}\r\n                  sendMessage={props.sendMessage}\r\n        />\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {setActiveNameDialogs, sendMessage}))\r\n(Dialogs)"],"sourceRoot":""}