{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Messages.jsx","store/dialogsSelectors.js","components/Dialogs/Dialogs.jsx"],"names":["module","exports","Dialog","dialogsPage","setActiveNameDialogs","theme","useContext","ThemeContext","className","classes","dialog","style","backgroundColor","backgroundContent","Object","keys","dialogs","map","name","activeNameDialogs","activeName","onClick","showMessages","Messages","sendMessage","useState","message","setMessage","messages","transition","choosingDialog","whoWrite","dialogMessage","id","sendArea","createSendArea","e","currentTarget","value","backgroundButton","getDialogsPage","state","compose","withAuthRedirect","connect","props"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,SAAW,0BAA0B,eAAiB,gCAAgC,QAAU,2B,4FCmBrPC,EAhBA,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,qBACpBC,EAAQC,qBAAWC,KAIzB,OAAO,qBAAKC,UAAWC,IAAQC,OAAQC,MAAO,CAC1CC,gBAAiBP,EAAMQ,mBADpB,SAGFC,OAAOC,KAAKZ,EAAYa,SAASC,KAAI,SAAAC,GAAI,OACtC,qBACKV,UAAWL,EAAYgB,oBAAsBD,EAAOT,IAAQW,WAAa,KAD9E,SAEI,mBAAGC,QAAS,kBATL,SAACH,GAChBd,EAAqBc,GAQKI,CAAaJ,IAA/B,SAAsC,4BAAIA,OAFpCA,S,iCCyBPK,EAjCE,SAAC,GAAgC,IAA/BpB,EAA8B,EAA9BA,YAAaqB,EAAiB,EAAjBA,YACtBnB,EAAQC,qBAAWC,KACzB,EAA8BkB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAAO,sBAAKnB,UAAWC,IAAQmB,SAAUjB,MAAO,CAC5CC,gBAAiBP,EAAMQ,kBACvBgB,WAAY,QAFT,WAID1B,EAAYgB,mBAAqB,qBAAKX,UAAWC,IAAQqB,eAAxB,8CAElC3B,EAAYgB,kBACT,8BACKhB,EAAYa,QAAQb,EAAYgB,mBAAmBF,KAAI,SAAAS,GACpD,OAAO,qBACKlB,UAAiC,OAArBkB,EAAQK,SAAqBtB,IAAQiB,QAAU,KADhE,SAEFA,EAAQM,eAFIN,EAAQO,SAKxB,KAEZ9B,EAAYgB,mBACb,qBAAKX,UAAWC,IAAQyB,SAAxB,SACKC,aAzBa,SAACC,GACnBT,EAAWS,EAAEC,cAAcC,SAwBQZ,GAtBf,WACpBF,EAAYE,EAASvB,EAAYgB,mBACjCQ,EAAW,MAoBkDtB,EAAMkC,wB,SCjC9DC,EAAiB,SAACC,GAC3B,OAAOA,EAAMtC,aC0BFuC,sBACXC,IACAC,aARkB,SAACH,GACnB,MAAO,CACHtC,YAAaqC,EAAeC,MAMP,CAACrC,yBAAsBoB,kBAFrCkB,EAjBC,SAACG,GACb,OAAO,sBAAKrC,UAAWC,IAAQO,QAAxB,UACH,cAAC,EAAD,CAAQb,YAAa0C,EAAM1C,YACnBC,qBAAsByC,EAAMzC,uBAEpC,cAAC,EAAD,CAAUD,YAAa0C,EAAM1C,YACnBqB,YAAaqB,EAAMrB","file":"static/js/3.c67b00a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Hn1K\",\"dialog\":\"Dialogs_dialog__2KwYG\",\"activeName\":\"Dialogs_activeName__1ZNXl\",\"messages\":\"Dialogs_messages__3z5ov\",\"sendArea\":\"Dialogs_sendArea__CnzHz\",\"choosingDialog\":\"Dialogs_choosingDialog__udkB4\",\"message\":\"Dialogs_message__1A0aL\"};","import React, {useContext} from 'react';\nimport classes from './../Dialogs.module.css';\nimport {ThemeContext} from '../../../store/appReducer';\n\nconst Dialog = ({dialogsPage, setActiveNameDialogs}) => {\n    const theme = useContext(ThemeContext);\n    let showMessages = (name) => {\n        setActiveNameDialogs(name)\n    }\n    return <div className={classes.dialog} style={{\n        backgroundColor: theme.backgroundContent,\n    }}>\n        {Object.keys(dialogsPage.dialogs).map(name => (\n            <div key={name}\n                 className={dialogsPage.activeNameDialogs === name ? classes.activeName : null}>\n                <p onClick={() => showMessages(name)}><b>{name}</b></p>\n            </div>))}\n    </div>\n}\n\nexport default Dialog;","import React, {useContext, useState} from 'react';\nimport classes from './../Dialogs.module.css';\nimport {createSendArea} from '../../../common/helpers';\nimport {ThemeContext} from '../../../store/appReducer';\n\nconst Messages = ({dialogsPage, sendMessage}) => {\n    const theme = useContext(ThemeContext);\n    const [message, setMessage] = useState('');\n    const changeMessage = (e) => {\n        setMessage(e.currentTarget.value)\n    }\n    const sendMessageText = () => {\n        sendMessage(message, dialogsPage.activeNameDialogs);\n        setMessage('')\n    }\n    return <div className={classes.messages} style={{\n        backgroundColor: theme.backgroundContent,\n        transition: '0.5s'\n    }}>\n        {!dialogsPage.activeNameDialogs && <div className={classes.choosingDialog}>⇦⇦⇦ Choose dialog</div>}\n\n        {dialogsPage.activeNameDialogs ?\n            <div>\n                {dialogsPage.dialogs[dialogsPage.activeNameDialogs].map(message => {\n                    return <div key={message.id}\n                                className={(message.whoWrite === 'me') ? classes.message : null}>\n                        {message.dialogMessage}\n                    </div>\n                })}\n            </div> : null}\n\n        {dialogsPage.activeNameDialogs &&\n        <div className={classes.sendArea}>\n            {createSendArea(changeMessage, message, sendMessageText, theme.backgroundButton)}\n        </div>}\n    </div>\n}\n\nexport default Messages;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage\r\n}","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport {connect} from 'react-redux';\nimport Dialog from './Dialog/Dialog';\nimport withAuthRedirect from '../../hocs/withAuthRedirect';\nimport {compose} from 'redux';\nimport Messages from './Messages/Messages';\nimport {sendMessage, setActiveNameDialogs} from '../../store/dialogsReducer';\nimport {getDialogsPage} from '../../store/dialogsSelectors';\n\nconst Dialogs = (props) => {\n    return <div className={classes.dialogs}>\n        <Dialog dialogsPage={props.dialogsPage}\n                setActiveNameDialogs={props.setActiveNameDialogs}\n        />\n        <Messages dialogsPage={props.dialogsPage}\n                  sendMessage={props.sendMessage}\n        />\n    </div>\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: getDialogsPage(state),\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {setActiveNameDialogs, sendMessage}))\n(Dialogs)"],"sourceRoot":""}